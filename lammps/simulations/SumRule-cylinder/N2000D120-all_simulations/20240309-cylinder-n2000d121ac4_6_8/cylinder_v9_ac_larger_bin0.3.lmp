#---------- (1) Variables ----------
# LJ inter-species sigma: sigma_ij
# 1: small monomer, 2: large monomer, 3: crowder
variable sig1 equal 1.0
variable sig12 equal (${sig1}+${sig2})/2

# LJ inter-sepcies r_cutoff: r_cutoff_ij
variable ljRcut equal 1.122462 # lj/cutoff distance: 2^(1/6)

variable cutoff11 equal ${sig1}*${ljRcut}
variable cutoff12 equal ((${sig1}+${sig2})/2.0)*${ljRcut}
variable cutoff22 equal ${sig2}*${ljRcut}

#--------------------- (2) Initialization ---------------------
units   lj # Lennard-Jones units.
dimension   3 # 3 dimensional simulation.
boundary    f f p # 
atom_style  bond
#--------------------- (3) Processors Communications ---------------------
processors 1 1 *

#---------- Read input file ----------
read_data   minimized.initial.config.data nocoeff

#--------------------- (3) Neighbor Lists ---------------------
variable vskin equal 0.3 # v stands for Verlet
neighbor ${vskin} bin # using different ghost cutoffs  
neigh_modify    delay 0 every 1 check yes

#---------- Reshape simulation box/Define simulation box   ----------
region  cylshell cylinder z 0.0 0.0 ${r} INF INF units box
#--------------------- (5) Atom Definition ---------------------
#---------- Group atoms ----------
group   bug type 1
group   crowd type 2

#---------- Define atoms masses ----------
mass 1 1.0
mass 2 1.0

#---------- Set velocity of the chain ----------
#----- Define a temperature compute for the chain and use to set velocity for the chain -----
compute mobile bug temp
velocity   bug create 1.0 ${randseed} temp mobile

#--------------------- (6) Interatomic/molecular Potential ---------------------
#---------- Lennard-Jones potential among all particles ----------
#---------- (6-a) Variables ----------


pair_style	lj/cut ${ljRcut} # Cutoff distance = 2^(1/6) = 1.12246. For each pair, this cutoff is multiplied by sig_{ij} to give the real cutoff for each pair.

#Pair coefficient:   type-i  type-j (i should always be smaller than j) epsilon=1 sigma=(a_i+a_j)/2   cutoff=((sig_i+sig_j)/2)*2^(1/6)
pair_coeff      1 1 1.0 ${sig1}  ${cutoff11}
pair_coeff      1 2 1.0 ${sig12} ${cutoff12}
pair_coeff      2 2 1.0 ${sig2}  ${cutoff22}

#---------- FENE potential among the chain's monomers ----------
#---------- (6-b) Variables ----------
variable    sig1_fene equal 1.5*${sig1}
variable    k1_fene equal  30/(${sig1}*${sig1})

bond_style  fene

#Bond coefficient:  type-i  K=(30*epsilon)/((a_i+a_j_^2)   R_0=1.5*((a_i+a_j)/2 )   epsilon=1    sigma=(a_i+a_j)/2
bond_coeff  1 ${k1_fene}  ${sig1_fene}    1.0 ${sig1}

#---------- Weighting coefficient for bonded atoms with pairwise interactions (Example,LJ interaction of two monomers in a chain) ----------
special_bonds   fene

#--------------------- Wall Settings ---------------------
fix     F_wall1 bug wall/region cylshell lj126 ${epsilon1} ${sig1} ${cutoff11} # Interaction between the lateral wall and the monomers.
fix     F_wall2 crowd wall/region cylshell lj126 1.0 ${sig12}  ${cutoff12} # Interaction between the lateral wall and the crowders.

thermo 10000
thermo_style custom step ke pe etail ecouple econserve evdwl ebond emol temp press
thermo_modify warn 100000

#--------------------- (8) Run a simulation ---------------------
#---------- Equilibration run - chain alone ----------


#--------------------- (8) Run a simulation ---------------------
#---------- Equilibration run - chain and crowders ---------- 
#---------- Create atoms ----------
# NVE limit
fix     F_nve all nve/limit 0.01
fix     F_langevin all langevin 1.0 1.0 10.0 ${randseed} tally yes
fix     F_recenter bug recenter NULL NULL 0.0 shift all units box
timestep 0.005
run 1000000
write_restart    ./restart_before.i${i}
# Wiping out commands
unfix F_langevin
unfix F_nve
unfix F_recenter

#---------- After equilibration (Data gathering run)
#Reset some settings
fix     F_langevin all langevin 1.0 1.0 10.0 ${randseed} tally yes
fix     F_nve all nve
fix     F_recenter bug recenter NULL NULL 0.0 shift all units box

timestep    0.005

dump	 D_bug bug atom  5000 ${simname}.bug.lammpstrj
dump_modify D_bug scale no
variable fname string input.lmp
variable j loop 20 pad
	label dump_loop
	dump	 D_all all atom 10000 ${simname}.j${j}.all.lammpstrj.gz
	dump_modify D_all scale no pad 2
	restart 5000000  ./restarts/restart.${i}
	run	15000000
	undump D_all
	next j
	jump ${fname} dump_loop # input.lmp is the input script itself to prevent any issues related to stdin and SELF.
#After this loop, the systems evolves 5.1*10E7 timesteps
undump D_bug
write_data ${simname}.all.data pair ij
write_restart    ./restart_after.i${i}