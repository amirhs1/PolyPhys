# Defining input parameters:
variable N equal 200
variable eps_hm equal 29
variable kBend11 equal 20
variable n_hns equal 12
variable sig4 equal 2
variable n_crowd equal 1000
variable l equal 60
variable i equal 1
variable randseed equal 12001
variable run_dt equal 0.01
variable ndump equal 2000
variable adump equal 5000
## Defining mode variables
### sigma_ij
# 1: DNA, 2: Protein pole, 2: Protine core, 4: Crowder
# In this model, sig2 is set based on cutoff22 from cutoff2
variable ljRcut equal 1.122461 # lj/cutoff distance: 2^(1/6)

variable sig1 equal 1.0 # DNA monomers
variable sig2 equal 0.178 # hns pole
variable sig3 equal 1.0 # hns core

variable sig11 equal 0.5*(${sig1}+${sig1})
variable sig12 equal 0.535 # = 0.5*(${cutoff22}+${sig1})/${ljRcut} 
variable sig13 equal 0.5*(${sig1}+${sig3})
variable sig14 equal 0.5*(${sig1}+${sig4})
variable sig22 equal 0.5*(${sig2}+${sig2})
# No interactions between pole and hole and pole and crowoder, so
# sig23 and sig24 are not defined
#variable sig23 equal 0.5*(${sig2}+${sig3}) # For FENE bond, not LJ exclusion
#variable sig24 equal 0.535
variable sig33 equal 0.5*(${sig3}+${sig3})
variable sig34 equal 0.5*(${sig3}+${sig4})
variable sig44 equal 0.5*(${sig4}+${sig4})

### r_cutoff_ij
variable cutoff11 equal ${sig11}*${ljRcut}
variable cutoff12 equal 0.685 #unclear how it is set.
variable cutoff13 equal ${sig13}*${ljRcut}
variable cutoff14 equal ${sig14}*${ljRcut}
variable cutoff22 equal 0.2 # hns pole
# No interactions between pole and hole and pole and crowoder, so
# sig23 and sig24 are not defined
#variable cutoff23 equal ${sig23}*${ljRcut}
#variable cutoff24 equal ${sig24}*${ljRcut}
variable cutoff33 equal ${sig33}*${ljRcut}
variable cutoff34 equal ${sig34}*${ljRcut}
variable cutoff44 equal ${sig44}*${ljRcut}

### LJ epsilon_ij
# 1: DNA, 2: Protein pole, 2: Protine core, 4: Crowder
variable epsilon11 equal 1.0
variable epsilon12 equal 29.0
variable epsilon12equilbrate equal 1.0 # Use in equilibration phase
variable epsilon13 equal 1.0
variable epsilon14 equal 1.0
variable epsilon22 equal 1.0
# No interactions between pole and hole and pole and crowoder, so
# epsilon23 and epsilon24 are not defined
#variable epsilon23 equal 1.0
#variable epsilon24 equal 1.0
variable epsilon33 equal 1.0
variable epsilon34 equal 1.0
variable epsilon44 equal 1.0

### FENE: rBondFene_ij
# FENE inter-species max bond and spring constant:
# r_bond_ij = rBondFeneij 
# k_ij = kFeneij
# Lengths measured in unit sigma=sig11=sig1=1.0
# Energies measured in unit epsilon=epsilon11=1.0
# k_ij=k_11*(sig_11/sig_ij)^2
# k_11=k_0=30*epsilon_11
# r_bond_ij=r_bond_11*(sig_ij/sig_11)
# r_bond_11=r_bond_0=1.5*sig_11

#### dna-dna: FENE bond potential
variable rBondFene11 equal 1.5*${sig11}
variable kFene11 equal 30*${epsilon11}/(${sig11}^2)

# Harmonic inter-species max bond and spring constant:
# r_bond_ij = rBondHarmij 
# k_ij = kHarmij
# Lengths measured in unit sigma=sig11=sig1=1.0
# Energies measured in unit epsilon=epsilon11=1.0
# k_ij=k_11*(sig_11/sig_ij)^2
# k_11=k_0=80*epsilon_11
# r_bond_ij=r_bond_11*(sig_ij/sig_11)
# r_bond_11=r_bond_0=1.2*sig_11

#### protein_hole-protein_core: Harmonic bond potential
#variable rBondHarm23 equal 1.2*(${sig23}/${sig11})
variable rBondHarm23 equal 0.4
#variable kHarm23 equal 80*${epsilon11}
variable kHarm23 equal 120.0

## Initialization
units   lj
dimension   3
boundary    p p p
atom_style  angle

### Processors Communications
#processors 1 1 * # should be before read_data or create_box or change_box

### Read input file
# The data file should contains all the information about the atom types, 
# bond types, angles types, and the like; otherwise, you can use molecule
# command to read in new molecules, or use create_atoms to add new atoms or
# molecules to the system.
read_data minimized.dna.data nocoeff extra/atom/types 3 extra/bond/types 1 &
		  extra/angle/types 1

### Neighbor Lists ---------------------
# Verlet list, linked-cell binsize, and communication ghost cutoff: vskin and gskin
variable vskin equal 1.9 # v stands for Verlet
neighbor ${vskin} bin #multi # using different ghost cutoffs  
neigh_modify    delay 0 every 1 check yes

#neigh_modify collection/type 2 1*3 4 # 1:mons, hns_patch, and hns_core, 2:crowder
#### Communication settings
# ghost cutoff = neighbor cutoff = pairwise force cutoff + vskin
# cutoff/multi(=Rcut) overrides ghost cutoff only if former is larger 
# than later; please see below for cutoff/multi setting.
# Whithout "multi" option in "neighbor":
# ghost cutoff = max(neighbor cutoff) = max(pairwise force cutoff) + vskin # So we have:
# ghost cutoff = max(neighbor cutoff) = cutoffLL + vskin
# By changing to "multi" and setting communication/ghosy cutoff accordingly,
# we have:
#variable gRcut1 equal ${cutoff11}+${vskin} # ghost cutoff: dna monomers, poles, holes
#variable gRcut4 equal ${cutoff44}+${vskin} # ghost cutoff: crowders
#communicate single cutoff 3.0
#comm_modify mode multi cutoff/multi 1 ${gRcut1} cutoff/multi 2 ${gRcut4}

### Simulation box and regions
change_box  all x final -${l} ${l} y final -${l} ${l} z final -${l} ${l} &
            boundary p p p units box 
region cube block INF INF INF INF INF INF units box 

### Atom properties
#### Creating particles
molecule 2 hns.mol toff 1 boff 1 aoff 1 # defining hns protiens
variable randseed_mols equal ${randseed}+1
variable randseed_hns equal ${randseed}+2
variable randseed_crowds equal ${randseed}+3
create_atoms 0 random ${n_hns} ${randseed_mols} cube units box mol 2 ${randseed_hns}
create_atoms 4 random ${n_crowd} ${randseed_crowds} cube units box

#### Masses
variable m_crowd equal ${sig4}^3
mass 1 1.0
mass 2 1.0
mass 3 1.0
mass 4 ${m_crowd}

#### Groups
group dna 		type 1
group hns_pole  type 2
group hns_core  type 3
group crowder   type 4
group nucleoid  type 1 2 3

#### Add velocity
# Define a temperature compute and use it to set velocities of ALL the atoms.
compute mobile all temp
velocity all create 1.0 ${randseed} temp mobile

### Force fields
pair_style lj/cut ${ljRcut}
pair_modify shift yes 
#### Lennard-Jones potential among all particles
# LJ pair coeffs (i<=j): i j epsilon_ij sigma_ij cutoff_ij
pair_coeff 1 1 ${epsilon11} ${sig11} ${cutoff11}
pair_coeff 1 2 ${epsilon12equilbrate} ${sig12} ${cutoff12}
pair_coeff 1 3 ${epsilon13} ${sig13} ${cutoff13}
pair_coeff 1 4 ${epsilon14} ${sig14} ${cutoff14}
pair_coeff 2 2 ${epsilon22} ${sig22} ${cutoff22}
#pair_coeff 2 3 ${epsilon23} ${sig23}  ${cutoff23}
#pair_coeff 2 4 ${epsilon24} ${sig24}  ${cutoff24}
pair_coeff 3 3 ${epsilon33} ${sig33}  ${cutoff33}
pair_coeff 3 4 ${epsilon34} ${sig34}  ${cutoff34}
pair_coeff 4 4 ${epsilon44} ${sig44}  ${cutoff44}

#### Bond potentials
bond_style hybrid fene harmonic
special_bonds fene
# FENE bond coeffs:m (bond type) k_ij r_bond_ij epsilon_ij sigma_ij
bond_coeff 1 fene ${kFene11} ${rBondFene11} ${epsilon11} ${sig11} # dna-dna
# Harmonic bond coeffs:m (bond type) k_ij r_bond_ij
bond_coeff 2 harmonic ${kHarm23} ${rBondHarm23} # protein_hole-protein_core 

#### Angle potentials
angle_style harmonic
# Harmonic angle coeffs:m (angle type) k_ij angle_ij
angle_coeff 1 ${kBend11} 180.0 # dna-dna-dna
angle_coeff 2 50.0 180.0 # protein_hole-protein_core-protein_hole

#### Energy minimzation and time integration
variable scale4 equal ${m_crowd}/${sig4} # scaling tdamp based on the size of crowders
fix F_langevin all langevin 1 1 1 ${randseed} scale 4 ${scale4} tally yes
fix F_nve all nve/limit 0.01
fix F_recenter dna recenter 0.0 0.0 0.0 shift all units box
thermo 10000
thermo_style custom step ke pe ebond eangle edihed eimp emol evdwl ecoul &
             elong etail ecouple temp press vol
timestep 0.01
run 100000
write_restart ./restart.before.i${i}.part2.all_no_hns_attraction
unfix F_langevin
unfix F_nve
unfix F_recenter

## Sampling/production phase
#### Force fields
##### Lennard-Jones potential among all particles
# LJ pair coeffs (i<=j): i j epsilon_ij sigma_ij cutoff_ij
pair_coeff 1 2 ${epsilon12} ${sig12} ${cutoff12}

#### Energy minimzation and time integration
variable scale4 equal ${m_crowd}/${sig4} # scaling tdamp based on the size of crowders
fix F_langevin all langevin 1 1 1 ${randseed} scale 4 ${scale4} tally yes
fix F_nve all nve

timestep ${run_dt}

dump D_nucleoid nucleoid atom  ${ndump} N${N}epshm${eps_hm}kbmm${kBend11}nh${n_hns}ac${sig4}nc${n_crowd}l${l}dt${run_dt}ndump${ndump}adump${adump}ens${i}.ring.nucleoid.lammpstrj
dump_modify D_nucleoid scale no

variable fname string input.lmp
variable j loop 20 pad 
	label dump_loop
	dump D_all all atom ${adump} N${N}epshm${eps_hm}kbmm${kBend11}nh${n_hns}ac${sig4}nc${n_crowd}l${l}dt${run_dt}ndump${ndump}adump${adump}ens${i}.j${j}.ring.all.lammpstrj.gz
	dump_modify D_all scale no pad 2
	restart 100000 ./restarts/restart.${i}
	run	100000
	undump D_all
	next j
	jump ${fname} dump_loop # input.lmp is the input script itself to prevent any issues related to stdin and SELF.

undump D_nucleoid
write_data N${N}epshm${eps_hm}kbmm${kBend11}nh${n_hns}ac${sig4}nc${n_crowd}l${l}dt${run_dt}ndump${ndump}adump${adump}ens${i}.ring.all.data pair ij
write_restart ./restart_after.i${i}
unfix F_nve
