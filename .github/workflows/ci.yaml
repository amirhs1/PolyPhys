name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 polyphys

  typecheck:
    name: Type-check with mypy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install mypy and project
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run mypy
        run: mypy polyphys

  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install project with dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run tests with coverage and HTML report
        run: |
          test -f README.md || touch README.md
          pytest tests polyphys \
                 --cov=polyphys \
                 --cov-report=term-missing \
                 --cov-report=html \
                 --doctest-modules \
                 --doctest-glob="README.md"

      - name: Upload coverage HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-${{ matrix.python-version }}
          path: htmlcov

      - name: Upload coverage HTML report to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
